/*
 * This Java source file was generated by the Gradle 'init' task.
 * 
 * 
 * Functionality: Includes Unit and BDD Scenario Testing for User Story #_: ___________
 */

package cse.gradle;

import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.Test;

import cse.gradle.Server.Server;

public class Feature20Tests extends HTTPServerTests{
    /*
     * --------------------------------- UNIT TESTS ---------------------------------
     */

    // Login to test user
    @Test
    public void testLoginEndpoint() {
        Model model = new MockModel();
        String retrievedUserId = model.performLoginRequest("test_user", "password");
        assertEquals(MockModel.mockUserId, retrievedUserId);
    }

    @Test 
    void checkLoginError() {
        Server.stopServer();

        Model model = new MockModel();
        String response = model.performLoginRequest("test_user", "password");
        String error = "Error: Server down";
        assertEquals(error, response);
    }

    // BDD TEST
    @Test 
    void completeServerErrorTest() {
        // login with test user
        Model model = new MockModel();
        String retrievedUserId = model.performLoginRequest("test_user", "password");
        assertEquals(MockModel.mockUserId, retrievedUserId);

        // cut connection and ask for recipe
        Server.stopServer();
        Recipe originalRecipe = new Recipe("potatoes", "boil the potatoes", "brunch", "boiled potatoes");
        String response = model.postRecipe(originalRecipe);
        String error = "Error: Server down";
        assertEquals(error, response);
    }

}

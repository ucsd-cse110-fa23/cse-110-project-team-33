/*
 * This Java source file was generated by the Gradle 'init' task.
 * 
 * 
 * Functionality: Includes Unit and BDD Scenario Testing for User Story #17: Filter by Meal Type
 */
package cse.gradle;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.ArrayList;
import java.util.List;


class Feature17Tests {
    /* --------------------------------- UNIT TESTS --------------------------------- */
    @Test
    void filterMatchingRecipes() {
        Recipe r1 = new Recipe("eggs, bacon", "cook for 10 minutes", "breakfast", "American breakfast");
        Recipe r2 = new Recipe("salmon, salad", "cook for 20 minutes", "lunch", "Healthy Lunch");
        Recipe r3 = new Recipe("potatoes", "boil the potatoes", "dinner", "boiled potatoes");
        List<Recipe> rList = new ArrayList<>();
        rList.add(r1);
        rList.add(r2);
        rList.add(r3);
        
        Recipe.filterByMealType(rList, "breakfast");
        assert(rList.size() == 1);
        assert(rList.get(0).getCategory() == "breakfast");
    }
    
    @Test
    void filterNoMatchingRecipes() {
        Recipe r1 = new Recipe("eggs, bacon", "cook for 10 minutes", "breakfast", "American breakfast");
        Recipe r2 = new Recipe("salmon, salad", "cook for 20 minutes", "breakfast", "Healthy Lunch");
        Recipe r3 = new Recipe("potatoes", "boil the potatoes", "dinner", "boiled potatoes");
        List<Recipe> rList = new ArrayList<>();
        rList.add(r1);
        rList.add(r2);
        rList.add(r3);
        
        Recipe.filterByMealType(rList, "lunch");
        assert(rList.size() == 0);
    }
    /* --------------------------------- BDD TESTS --------------------------------- */
    @Test
    void varyingFiltersOnUserRecipes() {
        Recipe r1 = new Recipe("eggs, bacon", "cook for 10 minutes", "breakfast", "American breakfast");
        Recipe r2 = new Recipe("salmon, salad", "cook for 20 minutes", "breakfast", "Healthy Lunch");
        Recipe r3 = new Recipe("potatoes", "boil the potatoes", "dinner", "boiled potatoes");
        Recipe r4 = new Recipe("salmon", "boil the salmon", "dinner", "boiled salmon");
        List<Recipe> rList = new ArrayList<>();
        rList.add(r1);
        rList.add(r2);
        rList.add(r3);
        rList.add(r4);
        
        User Joe = new User("abc", "123");
        Joe.setRecipeList(rList);
        
        Recipe.filterByMealType(rList, "breakfast");
        assert(rList.size() == 2);
        assert(rList.get(0).getCategory() == "breakfast");

        Recipe.filterByMealType(rList, "dinner");
        assert(rList.size() == 0);
    }
}

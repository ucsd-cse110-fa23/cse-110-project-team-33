/*
 * This Java source file was generated by the Gradle 'init' task.
 * 
 * 
 * Functionality: Includes Unit and BDD Scenario Testing for Feature #9: User Account Creation
 */
package cse.gradle;

import org.bson.Document;
import org.junit.jupiter.api.Test;

import cse.gradle.Server.MongoDB;

import static org.junit.jupiter.api.Assertions.*;

import java.util.ArrayList;
import java.util.List;


class Feature9Tests {
    /* --------------------------------- UNIT TESTS --------------------------------- */
    @Test 
    void createNewUser() {
        MockRecipeGenerator mock = new MockRecipeGenerator();
        Recipe r1 = mock.generateNewRecipe("breakfast", "eggs, bacon", "cook for 10 minutes", "American breakfast");
        Recipe r2 = mock.generateNewRecipe("lunch", "salmon, salad", "cook for 20 minutes", "Healthy Lunch");        
        ArrayList<Recipe> rList = new ArrayList<Recipe>();
        rList.add(r1);
        rList.add(r2);
        
        User user = new User("Barry", "123");
        assertEquals(2, user.getRecipeList().size());
        
        ArrayList<Recipe> rList2 = new ArrayList<Recipe>();
        rList2.add(r1);
        user.setRecipeList(rList2);
        assertEquals(1, user.getRecipeList().size());        
    }
    /* --------------------------------- BDD TESTS --------------------------------- */

    @Test
    void mongoDBQueryTest() {
        // Note: recipes_db is for testing purposes only, the real database will be users_db 
        // where each user has a list of recipes
        MongoDB mongoDB = new MongoDB("mongodb+srv://trevor:cse110@dev-azure-desktop.4j6hron.mongodb.net/?retryWrites=true&w=majority", "recipe_db", "recipes");
        mongoDB.connect();

        // mongoDB.collection.insertOne(new Document().append("test", "test"));

        // insert a recipe
        Recipe recipe = new Recipe("potatoes", "boil the potatoes", "brunch", "boiled potatoes");
        mongoDB.insertOne(recipe.toDocument());

        // find the recipe
        Document result = mongoDB.findOne("name", "boiled potatoes");
        Recipe resultRecipe = Recipe.parseRecipeFromDocument(result);
        assertEquals(Recipe.equals(recipe, resultRecipe), true);

        // update the recipe
        recipe.setCategory("breakfast");
        mongoDB.updateOne("name", "boiled potatoes", recipe.toDocument());

        // find the updated recipe
        result = mongoDB.findOne("name", "boiled potatoes");
        resultRecipe = Recipe.parseRecipeFromDocument(result);
        assertEquals(Recipe.equals(recipe, resultRecipe), true);

        // delete the recipe
        mongoDB.deleteOne("name", "boiled potatoes");

        // find the deleted recipe
        result = mongoDB.findOne("name", "boiled potatoes");
        assertEquals(result, null);

    }
}
